// File generated by FlutterFire CLI.
// ignore_for_file: lines_longer_than_80_chars
import 'package:firebase_core/firebase_core.dart' show FirebaseOptions;
import 'package:flutter/foundation.dart'
    show defaultTargetPlatform, kIsWeb, TargetPlatform;
import 'package:flutter_dotenv/flutter_dotenv.dart';
import 'package:flutter_getx_template/flavors/environment.dart';

/// Default [FirebaseOptions] for use with your Firebase apps.
///
/// Example:
/// ```dart
/// import 'firebase_options.dart';
/// // ...
/// await Firebase.initializeApp(
///   options: DefaultFirebaseOptions.currentPlatform,
/// );
/// ```
class DefaultFirebaseOptions {
  static FirebaseOptions currentPlatform(Environment env) {
    if (kIsWeb) {
      throw UnsupportedError(
        'DefaultFirebaseOptions have not been configured for web - '
        'you can reconfigure this by running the FlutterFire CLI again.',
      );
    }
    // ignore: missing_enum_constant_in_switch
    switch (defaultTargetPlatform) {
      case TargetPlatform.android:
        return env == Environment.PRODUCTION ? androidProd : androidDev;
      case TargetPlatform.iOS:
        return env == Environment.PRODUCTION ? iosProd : iosDev;
      case TargetPlatform.macOS:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for macos - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
    }

    throw UnsupportedError(
      'DefaultFirebaseOptions are not supported for this platform.',
    );
  }

  static FirebaseOptions androidDev = FirebaseOptions(
    apiKey: dotenv.env['DEV_FIREBASE_ANDROID_API_KEY']!,
    appId: dotenv.env['DEV_FIREBASE_ANDROID_APP_ID']!,
    messagingSenderId: dotenv.env['DEV_FIREBASE_ANDROID_MESSAGING_SENDER_ID']!,
    projectId: dotenv.env['DEV_FIREBASE_ANDROID_PROJECT_ID']!,
    storageBucket: dotenv.env['DEV_FIREBASE_ANDROID_STORAGE_BUCKET']!,
  );

  static FirebaseOptions androidProd = FirebaseOptions(
    apiKey: dotenv.env['PROD_FIREBASE_ANDROID_API_KEY']!,
    appId: dotenv.env['PROD_FIREBASE_ANDROID_APP_ID']!,
    messagingSenderId: dotenv.env['PROD_FIREBASE_ANDROID_MESSAGING_SENDER_ID']!,
    projectId: dotenv.env['PROD_FIREBASE_ANDROID_PROJECT_ID']!,
    storageBucket: dotenv.env['PROD_FIREBASE_ANDROID_STORAGE_BUCKET']!,
  );

  static FirebaseOptions iosDev = FirebaseOptions(
    apiKey: dotenv.env['DEV_FIREBASE_IOS_API_KEY']!,
    appId: dotenv.env['DEV_FIREBASE_IOS_APP_ID']!,
    messagingSenderId: dotenv.env['DEV_FIREBASE_IOS_MESSAGING_SENDER_ID']!,
    projectId: dotenv.env['DEV_FIREBASE_IOS_PROJECT_ID']!,
    storageBucket: dotenv.env['DEV_FIREBASE_IOS_STORAGE_BUCKET']!,
    iosClientId: dotenv.env['DEV_FIREBASE_IOS_CLIENT_ID']!,
    iosBundleId: dotenv.env['DEV_FIREBASE_IOS_BUNDLE_ID']!,
  );

  static FirebaseOptions iosProd = FirebaseOptions(
    apiKey: dotenv.env['PROD_FIREBASE_IOS_API_KEY']!,
    appId: dotenv.env['PROD_FIREBASE_IOS_APP_ID']!,
    messagingSenderId: dotenv.env['PROD_FIREBASE_IOS_MESSAGING_SENDER_ID']!,
    projectId: dotenv.env['PROD_FIREBASE_IOS_PROJECT_ID']!,
    storageBucket: dotenv.env['PROD_FIREBASE_IOS_STORAGE_BUCKET']!,
    iosClientId: dotenv.env['PROD_FIREBASE_IOS_CLIENT_ID']!,
    iosBundleId: dotenv.env['PROD_FIREBASE_IOS_BUNDLE_ID']!,
  );
}
